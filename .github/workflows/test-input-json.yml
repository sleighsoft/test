# TODO julian: review code
name: "test-input-json"
on:
  workflow_dispatch:
    inputs:
      json:
        type: string
        description: JSON
        default: '{"id":"canaryf5","name":"canary","hash":"f5","enabled":false,"regions":{"us1":{"location":"centralus","connector":{"service_principal":"c60-customer-customer_id:8-region:4-connector","qc":{"type":"stonemont","name":"mock"},"dispatch":{"type":"command-alkon","name":"mock"},"batch":{"type":"command-alkon","name":"mock"}},"stages":{"dev":{"data":{"service_principal":"c60-customer-customer_id:8-region:4-stage:4","resource_configuration":{"datmssqlserver":{"sku":"50"}}}},"test":{"data":{"service_principal":"c60-customer-customer_id:8-region:4-stage:4","resource_configuration":{"datmssqlserver":{"sku":"50"}}}},"uat":{"data":{"service_principal":"c60-customer-customer_id:8-region:4-stage:4","resource_configuration":{"datmssqlserver":{"sku":"50"}}}},"prod":{"data":{"service_principal":"c60-customer-customer_id:8-region:4-stage:4","resource_configuration":{"datmssqlserver":{"sku":"50"}}}}}},"us2":{},"eu1":{}}}  '
        required: true
      
permissions:
  contents: read
jobs:
  parse-json:
    runs-on: ubuntu-latest
    outputs:
      customer_id: ${{ steps.parse-customerid.outputs.customer_id }}
      regions: ${{ steps.parse-regions.outputs.regions }}
    steps:
      - name: parse-customerid
        id: parse-customerid
        run: |
          customer_id=$(echo '${{ inputs.json }}' | jq ".id" -r)
          echo "$customer_id"
          echo "customer_id=$customer_id" >> $GITHUB_OUTPUT
      - name: parse-regions
        id: parse-regions
        run: |
          regions=$(echo '${{ inputs.json }}' | jq ".regions | keys" -c)
          echo "$regions"
          echo "regions=$regions" >> $GITHUB_OUTPUT
  test-output:
    needs: parse-json
    runs-on: ubuntu-latest
    steps:
      - name: regions
        run: |
          echo ${{ needs.parse-json.outputs.customer_id }}
          echo ${{ needs.parse-json.outputs.regions }}
  create-customer:
    needs: parse-json
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: ${{ fromJson(needs.parse-json.outputs.regions) }}
      fail-fast: false
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: echo
        run: |
          echo "${{ needs.parse-json.outputs.customer_id }}"
          echo "${{ matrix.region }}"
      - name: parse-region-location
        id: parse-region-location
        run: |
          location=$(echo '${{ inputs.json }}' | jq ".regions | .${{ matrix.region }} | .location" -c)
          echo "$location"
          echo "location=$location" >> $GITHUB_OUTPUT